[xdebug]
#
xdebug.start_with_request = yes
xdebug.discover_client_host = 1
# Для хоршого отображение
xdebug.mode= debug, develop
# порт стандарт 9003
xdebug.client_port= 9003
#  172.17.0.1 хост для удаленной отладки ifconfig ишем раздел docker0:
xdebug.client_host= 172.17.0.1
# что бы подсветка была красивая
integer xdebug.cli_color = 1
# Принцепи это есть в env файл но решил еше сюда добавить
xdebug.idekey= PHPSTORM

# Инструкция настройки PhpStorm . Для нашего случая инструкция немного изменина
# https://blog.denisbondar.com/post/phpstorm_docker_xdebug
#
# File — Settings -Build, Execution, Deployment» — Docker
# Проверяем что бы был нажат плюсик name = Docker , Connect to Doc.... = Unix socket
# Connection successful
#
# File — Settings - PHP
# Выбераем нашу версию пышки которая указана в Docker Compose
# Справа от CLI Interpreter нажмите кнопку с тремя точками.
# В открывшемся окне CLI Interpreters нажмите плюс слева вверху и выберите там From Docker….
# Далее нужно выбрать Docker Compose
# Сервер = докер
# конфигурационный фаил указав наш путь к docker-compose.yml
# в сервисе выбераем php-fpm
# Далее ок
#
# В открывшимся окне Задаем имя нашего Docker Php7.4 , рядом ставим галочку visible only for this....
# Далее галочка в Connect to existent container
# И у нас внизу должно быть все указано если нет то нажимает ок и можем проделать все тоже самое (добавить)
# но ставим php-cli опцию Always start a new container
# По идеи что то должно произойти и оно должно все отобразить
#
# Path mappings берется из docker-compose.yml (проверяем путь в этом окне File — Settings - PHP )
# Папка на локальном где лежит наш проэкт vs папка которая записано в docker-compose.yml куда перекидывает наш проэкт
#
# File — Settings - PHP - Debug. И нажмите на ссылку Validate.
#  должны указать полный путь к web-корню (в нашем примере это подкаталог проекта public)
# адрес сервера (в нашем примере порт 80 контейнера nginx укажите обязательно его http://127.0.0.1,или например, http://127.0.0.1:8080). Нажмите Validate.
# Это проверка настроино все верно да или нет.
#
# File — Settings - PHP - Servers нажмите плюсик, чтобы добавить новый.
# Укажите имя сервера www (должно совпадать с переменной окружения PHP_IDE_CONFIG в docker-compose.yml) и хост 127.0.0.1.
# Пропешите или проверти мапинг
#
# В главном меню Run перейдите в Edit configurations…
# Нажмите плюсик вверху слева и выбирайте PHP Web page. Укажите имя для данной страницы, например, WWW,
# затем укажите сервер, с которым связана эта страница (мы создали его на предыдущем шаге) и нажмите OK.
#